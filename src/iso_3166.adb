package body ISO_3166 is

   --  *** Begin Public Functions ***
   --   Retrive a country with a provided Alpha_2 code.
   function From_Alpha2 (Alpha_2 : Alpha_2_Code) return ISO_3166_1
   is
      Country_Key : constant Alpha_2_Key := Alpha_2_Key' Value
                                             ("Key_" & String(Alpha_2));
   begin
      return Alpha_2_Key_To_Country (Country_Key);
   exception
      when CONSTRAINT_ERROR => raise Country_Not_Found;
   end From_Alpha2;

   -- Retrive a country with a provided Alpha_3 code.
   function From_Alpha3 (Alpha_3 : Alpha_3_Code) return ISO_3166_1 is
      --  Retrive alpha_2 key from alpha_3 key.
      Country_Key : constant Alpha_2_Key := Alpha_3_to_Alpha_2 (Alpha_3);
   begin
      --  Retrieve country from alpha_2 key.
      return Alpha_2_Key_To_Country (Country_Key);
   exception
      when CONSTRAINT_ERROR => raise Country_Not_Found;
   end From_Alpha3;

   --  Retrive a country with a provided Numerical code.
   function From_Numeric (Numeric : Natural) return ISO_3166_1
   is
      Country_Key : constant Alpha_2_Key := Numeric_To_Alpha_2 (Numeric);
   begin
      return Alpha_2_Key_To_Country (Country_Key);
   end From_Numeric;

   --  Retrive a country with a provided Numerical string.
   function From_Numeric (Numeric : String) return ISO_3166_1
   is
      Numeric_Number : constant Natural := Natural'Value (Numeric);
   begin
      return From_Numeric (Numeric_Number);
   end From_Numeric;

   --  From a Ada.Locales country
   function From_Country_Code (Item : Ada.Locales.Country_Code) return ISO_3166_1
   is
      use Ada.Locales;
   begin
      return From_Alpha2 (Alpha_2_Code (Item));
   exception
      when CONSTRAINT_ERROR => raise Country_Not_Found;
   end From_Country_Code;

   --  Country to Ada.Locales Country_Code
   function To_Country_Code (Item : ISO_3166_1) return Ada.Locales.Country_Code
   is
      use Ada.Locales;
   begin
      return Country_Code (Item.Alpha_2);
   end To_Country_Code;

   --  Return a vector of all countries
   function All_Countries return Countries is
      Result : Countries;
   begin
      Result.Append(Country_AF);
      Result.Append(Country_AL);
      Result.Append(Country_DZ);
      Result.Append(Country_AS);
      Result.Append(Country_AD);
      Result.Append(Country_AO);
      Result.Append(Country_AI);
      Result.Append(Country_AQ);
      Result.Append(Country_AG);
      Result.Append(Country_AR);
      Result.Append(Country_AM);
      Result.Append(Country_AW);
      Result.Append(Country_AU);
      Result.Append(Country_AT);
      Result.Append(Country_AZ);
      Result.Append(Country_BS);
      Result.Append(Country_BH);
      Result.Append(Country_BD);
      Result.Append(Country_BB);
      Result.Append(Country_BY);
      Result.Append(Country_BE);
      Result.Append(Country_BZ);
      Result.Append(Country_BJ);
      Result.Append(Country_BM);
      Result.Append(Country_BT);
      Result.Append(Country_BO);
      Result.Append(Country_BQ);
      Result.Append(Country_BA);
      Result.Append(Country_BW);
      Result.Append(Country_BV);
      Result.Append(Country_BR);
      Result.Append(Country_IO);
      Result.Append(Country_BN);
      Result.Append(Country_BG);
      Result.Append(Country_BF);
      Result.Append(Country_BI);
      Result.Append(Country_CV);
      Result.Append(Country_KH);
      Result.Append(Country_CM);
      Result.Append(Country_CA);
      Result.Append(Country_KY);
      Result.Append(Country_CF);
      Result.Append(Country_TD);
      Result.Append(Country_CL);
      Result.Append(Country_CN);
      Result.Append(Country_CX);
      Result.Append(Country_CC);
      Result.Append(Country_CO);
      Result.Append(Country_KM);
      Result.Append(Country_CD);
      Result.Append(Country_CG);
      Result.Append(Country_CK);
      Result.Append(Country_CR);
      Result.Append(Country_HR);
      Result.Append(Country_CU);
      Result.Append(Country_CW);
      Result.Append(Country_CY);
      Result.Append(Country_CZ);
      Result.Append(Country_CI);
      Result.Append(Country_DK);
      Result.Append(Country_DJ);
      Result.Append(Country_DM);
      Result.Append(Country_DO);
      Result.Append(Country_EC);
      Result.Append(Country_EG);
      Result.Append(Country_SV);
      Result.Append(Country_GQ);
      Result.Append(Country_ER);
      Result.Append(Country_EE);
      Result.Append(Country_SZ);
      Result.Append(Country_ET);
      Result.Append(Country_FK);
      Result.Append(Country_FO);
      Result.Append(Country_FJ);
      Result.Append(Country_FI);
      Result.Append(Country_FR);
      Result.Append(Country_GF);
      Result.Append(Country_PF);
      Result.Append(Country_TF);
      Result.Append(Country_GA);
      Result.Append(Country_GM);
      Result.Append(Country_GE);
      Result.Append(Country_DE);
      Result.Append(Country_GH);
      Result.Append(Country_GI);
      Result.Append(Country_GR);
      Result.Append(Country_GL);
      Result.Append(Country_GD);
      Result.Append(Country_GP);
      Result.Append(Country_GU);
      Result.Append(Country_GT);
      Result.Append(Country_GG);
      Result.Append(Country_GN);
      Result.Append(Country_GW);
      Result.Append(Country_GY);
      Result.Append(Country_HT);
      Result.Append(Country_HM);
      Result.Append(Country_VA);
      Result.Append(Country_HN);
      Result.Append(Country_HK);
      Result.Append(Country_HU);
      Result.Append(Country_IS);
      Result.Append(Country_IN);
      Result.Append(Country_ID);
      Result.Append(Country_IR);
      Result.Append(Country_IQ);
      Result.Append(Country_IE);
      Result.Append(Country_IM);
      Result.Append(Country_IL);
      Result.Append(Country_IT);
      Result.Append(Country_JM);
      Result.Append(Country_JP);
      Result.Append(Country_JE);
      Result.Append(Country_JO);
      Result.Append(Country_KZ);
      Result.Append(Country_KE);
      Result.Append(Country_KI);
      Result.Append(Country_KP);
      Result.Append(Country_KR);
      Result.Append(Country_KW);
      Result.Append(Country_KG);
      Result.Append(Country_LA);
      Result.Append(Country_LV);
      Result.Append(Country_LB);
      Result.Append(Country_LS);
      Result.Append(Country_LR);
      Result.Append(Country_LY);
      Result.Append(Country_LI);
      Result.Append(Country_LT);
      Result.Append(Country_LU);
      Result.Append(Country_MO);
      Result.Append(Country_MG);
      Result.Append(Country_MW);
      Result.Append(Country_MY);
      Result.Append(Country_MV);
      Result.Append(Country_ML);
      Result.Append(Country_MT);
      Result.Append(Country_MH);
      Result.Append(Country_MQ);
      Result.Append(Country_MR);
      Result.Append(Country_MU);
      Result.Append(Country_YT);
      Result.Append(Country_MX);
      Result.Append(Country_FM);
      Result.Append(Country_MD);
      Result.Append(Country_MC);
      Result.Append(Country_MN);
      Result.Append(Country_ME);
      Result.Append(Country_MS);
      Result.Append(Country_MA);
      Result.Append(Country_MZ);
      Result.Append(Country_MM);
      Result.Append(Country_NA);
      Result.Append(Country_NR);
      Result.Append(Country_NP);
      Result.Append(Country_NL);
      Result.Append(Country_NC);
      Result.Append(Country_NZ);
      Result.Append(Country_NI);
      Result.Append(Country_NE);
      Result.Append(Country_NG);
      Result.Append(Country_NU);
      Result.Append(Country_NF);
      Result.Append(Country_MK);
      Result.Append(Country_MP);
      Result.Append(Country_NO);
      Result.Append(Country_OM);
      Result.Append(Country_PK);
      Result.Append(Country_PW);
      Result.Append(Country_PS);
      Result.Append(Country_PA);
      Result.Append(Country_PG);
      Result.Append(Country_PY);
      Result.Append(Country_PE);
      Result.Append(Country_PH);
      Result.Append(Country_PN);
      Result.Append(Country_PL);
      Result.Append(Country_PT);
      Result.Append(Country_PR);
      Result.Append(Country_QA);
      Result.Append(Country_RO);
      Result.Append(Country_RU);
      Result.Append(Country_RW);
      Result.Append(Country_RE);
      Result.Append(Country_BL);
      Result.Append(Country_SH);
      Result.Append(Country_KN);
      Result.Append(Country_LC);
      Result.Append(Country_MF);
      Result.Append(Country_PM);
      Result.Append(Country_VC);
      Result.Append(Country_WS);
      Result.Append(Country_SM);
      Result.Append(Country_ST);
      Result.Append(Country_SA);
      Result.Append(Country_SN);
      Result.Append(Country_RS);
      Result.Append(Country_SC);
      Result.Append(Country_SL);
      Result.Append(Country_SG);
      Result.Append(Country_SX);
      Result.Append(Country_SK);
      Result.Append(Country_SI);
      Result.Append(Country_SB);
      Result.Append(Country_SO);
      Result.Append(Country_ZA);
      Result.Append(Country_GS);
      Result.Append(Country_SS);
      Result.Append(Country_ES);
      Result.Append(Country_LK);
      Result.Append(Country_SD);
      Result.Append(Country_SR);
      Result.Append(Country_SJ);
      Result.Append(Country_SE);
      Result.Append(Country_CH);
      Result.Append(Country_SY);
      Result.Append(Country_TW);
      Result.Append(Country_TJ);
      Result.Append(Country_TZ);
      Result.Append(Country_TH);
      Result.Append(Country_TL);
      Result.Append(Country_TG);
      Result.Append(Country_TK);
      Result.Append(Country_TO);
      Result.Append(Country_TT);
      Result.Append(Country_TN);
      Result.Append(Country_TM);
      Result.Append(Country_TC);
      Result.Append(Country_TV);
      Result.Append(Country_TR);
      Result.Append(Country_UG);
      Result.Append(Country_UA);
      Result.Append(Country_AE);
      Result.Append(Country_GB);
      Result.Append(Country_UM);
      Result.Append(Country_US);
      Result.Append(Country_UY);
      Result.Append(Country_UZ);
      Result.Append(Country_VU);
      Result.Append(Country_VE);
      Result.Append(Country_VN);
      Result.Append(Country_VG);
      Result.Append(Country_VI);
      Result.Append(Country_WF);
      Result.Append(Country_EH);
      Result.Append(Country_YE);
      Result.Append(Country_ZM);
      Result.Append(Country_ZW);
      Result.Append(Country_AX);
      return Result;
   end All_Countries;

   --  *** End Public Functions ***

   --  *** Begin Lookup table functions ***
   --  Lookup table to convert alpha_3 string to alpha_2 key.
   function Alpha_3_to_Alpha_2 (Alpha_3 : Alpha_3_Code) return Alpha_2_Key is
      Country_Key : constant Alpha_3_Key := Alpha_3_Key'Value
                                                ("Key_" & String(Alpha_3));
   begin
      case Country_Key is
         when Key_AFG => return Key_AF;
         when Key_ALB => return Key_AL;
         when Key_DZA => return Key_DZ;
         when Key_ASM => return Key_AS;
         when Key_AND => return Key_AD;
         when Key_AGO => return Key_AO;
         when Key_AIA => return Key_AI;
         when Key_ATA => return Key_AQ;
         when Key_ATG => return Key_AG;
         when Key_ARG => return Key_AR;
         when Key_ARM => return Key_AM;
         when Key_ABW => return Key_AW;
         when Key_AUS => return Key_AU;
         when Key_AUT => return Key_AT;
         when Key_AZE => return Key_AZ;
         when Key_BHS => return Key_BS;
         when Key_BHR => return Key_BH;
         when Key_BGD => return Key_BD;
         when Key_BRB => return Key_BB;
         when Key_BLR => return Key_BY;
         when Key_BEL => return Key_BE;
         when Key_BLZ => return Key_BZ;
         when Key_BEN => return Key_BJ;
         when Key_BMU => return Key_BM;
         when Key_BTN => return Key_BT;
         when Key_BOL => return Key_BO;
         when Key_BES => return Key_BQ;
         when Key_BIH => return Key_BA;
         when Key_BWA => return Key_BW;
         when Key_BVT => return Key_BV;
         when Key_BRA => return Key_BR;
         when Key_IOT => return Key_IO;
         when Key_BRN => return Key_BN;
         when Key_BGR => return Key_BG;
         when Key_BFA => return Key_BF;
         when Key_BDI => return Key_BI;
         when Key_CPV => return Key_CV;
         when Key_KHM => return Key_KH;
         when Key_CMR => return Key_CM;
         when Key_CAN => return Key_CA;
         when Key_CYM => return Key_KY;
         when Key_CAF => return Key_CF;
         when Key_TCD => return Key_TD;
         when Key_CHL => return Key_CL;
         when Key_CHN => return Key_CN;
         when Key_CXR => return Key_CX;
         when Key_CCK => return Key_CC;
         when Key_COL => return Key_CO;
         when Key_COM => return Key_KM;
         when Key_COD => return Key_CD;
         when Key_COG => return Key_CG;
         when Key_COK => return Key_CK;
         when Key_CRI => return Key_CR;
         when Key_HRV => return Key_HR;
         when Key_CUB => return Key_CU;
         when Key_CUW => return Key_CW;
         when Key_CYP => return Key_CY;
         when Key_CZE => return Key_CZ;
         when Key_CIV => return Key_CI;
         when Key_DNK => return Key_DK;
         when Key_DJI => return Key_DJ;
         when Key_DMA => return Key_DM;
         when Key_DOM => return Key_DO;
         when Key_ECU => return Key_EC;
         when Key_EGY => return Key_EG;
         when Key_SLV => return Key_SV;
         when Key_GNQ => return Key_GQ;
         when Key_ERI => return Key_ER;
         when Key_EST => return Key_EE;
         when Key_SWZ => return Key_SZ;
         when Key_ETH => return Key_ET;
         when Key_FLK => return Key_FK;
         when Key_FRO => return Key_FO;
         when Key_FJI => return Key_FJ;
         when Key_FIN => return Key_FI;
         when Key_FRA => return Key_FR;
         when Key_GUF => return Key_GF;
         when Key_PYF => return Key_PF;
         when Key_ATF => return Key_TF;
         when Key_GAB => return Key_GA;
         when Key_GMB => return Key_GM;
         when Key_GEO => return Key_GE;
         when Key_DEU => return Key_DE;
         when Key_GHA => return Key_GH;
         when Key_GIB => return Key_GI;
         when Key_GRC => return Key_GR;
         when Key_GRL => return Key_GL;
         when Key_GRD => return Key_GD;
         when Key_GLP => return Key_GP;
         when Key_GUM => return Key_GU;
         when Key_GTM => return Key_GT;
         when Key_GGY => return Key_GG;
         when Key_GIN => return Key_GN;
         when Key_GNB => return Key_GW;
         when Key_GUY => return Key_GY;
         when Key_HTI => return Key_HT;
         when Key_HMD => return Key_HM;
         when Key_VAT => return Key_VA;
         when Key_HND => return Key_HN;
         when Key_HKG => return Key_HK;
         when Key_HUN => return Key_HU;
         when Key_ISL => return Key_IS;
         when Key_IND => return Key_IN;
         when Key_IDN => return Key_ID;
         when Key_IRN => return Key_IR;
         when Key_IRQ => return Key_IQ;
         when Key_IRL => return Key_IE;
         when Key_IMN => return Key_IM;
         when Key_ISR => return Key_IL;
         when Key_ITA => return Key_IT;
         when Key_JAM => return Key_JM;
         when Key_JPN => return Key_JP;
         when Key_JEY => return Key_JE;
         when Key_JOR => return Key_JO;
         when Key_KAZ => return Key_KZ;
         when Key_KEN => return Key_KE;
         when Key_KIR => return Key_KI;
         when Key_PRK => return Key_KP;
         when Key_KOR => return Key_KR;
         when Key_KWT => return Key_KW;
         when Key_KGZ => return Key_KG;
         when Key_LAO => return Key_LA;
         when Key_LVA => return Key_LV;
         when Key_LBN => return Key_LB;
         when Key_LSO => return Key_LS;
         when Key_LBR => return Key_LR;
         when Key_LBY => return Key_LY;
         when Key_LIE => return Key_LI;
         when Key_LTU => return Key_LT;
         when Key_LUX => return Key_LU;
         when Key_MAC => return Key_MO;
         when Key_MDG => return Key_MG;
         when Key_MWI => return Key_MW;
         when Key_MYS => return Key_MY;
         when Key_MDV => return Key_MV;
         when Key_MLI => return Key_ML;
         when Key_MLT => return Key_MT;
         when Key_MHL => return Key_MH;
         when Key_MTQ => return Key_MQ;
         when Key_MRT => return Key_MR;
         when Key_MUS => return Key_MU;
         when Key_MYT => return Key_YT;
         when Key_MEX => return Key_MX;
         when Key_FSM => return Key_FM;
         when Key_MDA => return Key_MD;
         when Key_MCO => return Key_MC;
         when Key_MNG => return Key_MN;
         when Key_MNE => return Key_ME;
         when Key_MSR => return Key_MS;
         when Key_MAR => return Key_MA;
         when Key_MOZ => return Key_MZ;
         when Key_MMR => return Key_MM;
         when Key_NAM => return Key_NA;
         when Key_NRU => return Key_NR;
         when Key_NPL => return Key_NP;
         when Key_NLD => return Key_NL;
         when Key_NCL => return Key_NC;
         when Key_NZL => return Key_NZ;
         when Key_NIC => return Key_NI;
         when Key_NER => return Key_NE;
         when Key_NGA => return Key_NG;
         when Key_NIU => return Key_NU;
         when Key_NFK => return Key_NF;
         when Key_MKD => return Key_MK;
         when Key_MNP => return Key_MP;
         when Key_NOR => return Key_NO;
         when Key_OMN => return Key_OM;
         when Key_PAK => return Key_PK;
         when Key_PLW => return Key_PW;
         when Key_PSE => return Key_PS;
         when Key_PAN => return Key_PA;
         when Key_PNG => return Key_PG;
         when Key_PRY => return Key_PY;
         when Key_PER => return Key_PE;
         when Key_PHL => return Key_PH;
         when Key_PCN => return Key_PN;
         when Key_POL => return Key_PL;
         when Key_PRT => return Key_PT;
         when Key_PRI => return Key_PR;
         when Key_QAT => return Key_QA;
         when Key_ROU => return Key_RO;
         when Key_RUS => return Key_RU;
         when Key_RWA => return Key_RW;
         when Key_REU => return Key_RE;
         when Key_BLM => return Key_BL;
         when Key_SHN => return Key_SH;
         when Key_KNA => return Key_KN;
         when Key_LCA => return Key_LC;
         when Key_MAF => return Key_MF;
         when Key_SPM => return Key_PM;
         when Key_VCT => return Key_VC;
         when Key_WSM => return Key_WS;
         when Key_SMR => return Key_SM;
         when Key_STP => return Key_ST;
         when Key_SAU => return Key_SA;
         when Key_SEN => return Key_SN;
         when Key_SRB => return Key_RS;
         when Key_SYC => return Key_SC;
         when Key_SLE => return Key_SL;
         when Key_SGP => return Key_SG;
         when Key_SXM => return Key_SX;
         when Key_SVK => return Key_SK;
         when Key_SVN => return Key_SI;
         when Key_SLB => return Key_SB;
         when Key_SOM => return Key_SO;
         when Key_ZAF => return Key_ZA;
         when Key_SGS => return Key_GS;
         when Key_SSD => return Key_SS;
         when Key_ESP => return Key_ES;
         when Key_LKA => return Key_LK;
         when Key_SDN => return Key_SD;
         when Key_SUR => return Key_SR;
         when Key_SJM => return Key_SJ;
         when Key_SWE => return Key_SE;
         when Key_CHE => return Key_CH;
         when Key_SYR => return Key_SY;
         when Key_TWN => return Key_TW;
         when Key_TJK => return Key_TJ;
         when Key_TZA => return Key_TZ;
         when Key_THA => return Key_TH;
         when Key_TLS => return Key_TL;
         when Key_TGO => return Key_TG;
         when Key_TKL => return Key_TK;
         when Key_TON => return Key_TO;
         when Key_TTO => return Key_TT;
         when Key_TUN => return Key_TN;
         when Key_TKM => return Key_TM;
         when Key_TCA => return Key_TC;
         when Key_TUV => return Key_TV;
         when Key_TUR => return Key_TR;
         when Key_UGA => return Key_UG;
         when Key_UKR => return Key_UA;
         when Key_ARE => return Key_AE;
         when Key_GBR => return Key_GB;
         when Key_UMI => return Key_UM;
         when Key_USA => return Key_US;
         when Key_URY => return Key_UY;
         when Key_UZB => return Key_UZ;
         when Key_VUT => return Key_VU;
         when Key_VEN => return Key_VE;
         when Key_VNM => return Key_VN;
         when Key_VGB => return Key_VG;
         when Key_VIR => return Key_VI;
         when Key_WLF => return Key_WF;
         when Key_ESH => return Key_EH;
         when Key_YEM => return Key_YE;
         when Key_ZMB => return Key_ZM;
         when Key_ZWE => return Key_ZW;
         when Key_ALA => return Key_AX;
         when others => raise Country_Not_Found;
      end case;
   end Alpha_3_to_Alpha_2;

   --  Lookup table to convert numeric to alpha_2 key.
   function Numeric_To_Alpha_2 (Numeric : Natural) return Alpha_2_Key is
   begin
      case Numeric is
         when 004 => return Key_AF;
         when 008 => return Key_AL;
         when 012 => return Key_DZ;
         when 016 => return Key_AS;
         when 020 => return Key_AD;
         when 024 => return Key_AO;
         when 660 => return Key_AI;
         when 010 => return Key_AQ;
         when 028 => return Key_AG;
         when 032 => return Key_AR;
         when 051 => return Key_AM;
         when 533 => return Key_AW;
         when 036 => return Key_AU;
         when 040 => return Key_AT;
         when 031 => return Key_AZ;
         when 044 => return Key_BS;
         when 048 => return Key_BH;
         when 050 => return Key_BD;
         when 052 => return Key_BB;
         when 112 => return Key_BY;
         when 056 => return Key_BE;
         when 084 => return Key_BZ;
         when 204 => return Key_BJ;
         when 060 => return Key_BM;
         when 064 => return Key_BT;
         when 068 => return Key_BO;
         when 535 => return Key_BQ;
         when 070 => return Key_BA;
         when 072 => return Key_BW;
         when 074 => return Key_BV;
         when 076 => return Key_BR;
         when 086 => return Key_IO;
         when 096 => return Key_BN;
         when 100 => return Key_BG;
         when 854 => return Key_BF;
         when 108 => return Key_BI;
         when 132 => return Key_CV;
         when 116 => return Key_KH;
         when 120 => return Key_CM;
         when 124 => return Key_CA;
         when 136 => return Key_KY;
         when 140 => return Key_CF;
         when 148 => return Key_TD;
         when 152 => return Key_CL;
         when 156 => return Key_CN;
         when 162 => return Key_CX;
         when 166 => return Key_CC;
         when 170 => return Key_CO;
         when 174 => return Key_KM;
         when 180 => return Key_CD;
         when 178 => return Key_CG;
         when 184 => return Key_CK;
         when 188 => return Key_CR;
         when 191 => return Key_HR;
         when 192 => return Key_CU;
         when 531 => return Key_CW;
         when 196 => return Key_CY;
         when 203 => return Key_CZ;
         when 384 => return Key_CI;
         when 208 => return Key_DK;
         when 262 => return Key_DJ;
         when 212 => return Key_DM;
         when 214 => return Key_DO;
         when 218 => return Key_EC;
         when 818 => return Key_EG;
         when 222 => return Key_SV;
         when 226 => return Key_GQ;
         when 232 => return Key_ER;
         when 233 => return Key_EE;
         when 748 => return Key_SZ;
         when 231 => return Key_ET;
         when 238 => return Key_FK;
         when 234 => return Key_FO;
         when 242 => return Key_FJ;
         when 246 => return Key_FI;
         when 250 => return Key_FR;
         when 254 => return Key_GF;
         when 258 => return Key_PF;
         when 260 => return Key_TF;
         when 266 => return Key_GA;
         when 270 => return Key_GM;
         when 268 => return Key_GE;
         when 276 => return Key_DE;
         when 288 => return Key_GH;
         when 292 => return Key_GI;
         when 300 => return Key_GR;
         when 304 => return Key_GL;
         when 308 => return Key_GD;
         when 312 => return Key_GP;
         when 316 => return Key_GU;
         when 320 => return Key_GT;
         when 831 => return Key_GG;
         when 324 => return Key_GN;
         when 624 => return Key_GW;
         when 328 => return Key_GY;
         when 332 => return Key_HT;
         when 334 => return Key_HM;
         when 336 => return Key_VA;
         when 340 => return Key_HN;
         when 344 => return Key_HK;
         when 348 => return Key_HU;
         when 352 => return Key_IS;
         when 356 => return Key_IN;
         when 360 => return Key_ID;
         when 364 => return Key_IR;
         when 368 => return Key_IQ;
         when 372 => return Key_IE;
         when 833 => return Key_IM;
         when 376 => return Key_IL;
         when 380 => return Key_IT;
         when 388 => return Key_JM;
         when 392 => return Key_JP;
         when 832 => return Key_JE;
         when 400 => return Key_JO;
         when 398 => return Key_KZ;
         when 404 => return Key_KE;
         when 296 => return Key_KI;
         when 408 => return Key_KP;
         when 410 => return Key_KR;
         when 414 => return Key_KW;
         when 417 => return Key_KG;
         when 418 => return Key_LA;
         when 428 => return Key_LV;
         when 422 => return Key_LB;
         when 426 => return Key_LS;
         when 430 => return Key_LR;
         when 434 => return Key_LY;
         when 438 => return Key_LI;
         when 440 => return Key_LT;
         when 442 => return Key_LU;
         when 446 => return Key_MO;
         when 450 => return Key_MG;
         when 454 => return Key_MW;
         when 458 => return Key_MY;
         when 462 => return Key_MV;
         when 466 => return Key_ML;
         when 470 => return Key_MT;
         when 584 => return Key_MH;
         when 474 => return Key_MQ;
         when 478 => return Key_MR;
         when 480 => return Key_MU;
         when 175 => return Key_YT;
         when 484 => return Key_MX;
         when 583 => return Key_FM;
         when 498 => return Key_MD;
         when 492 => return Key_MC;
         when 496 => return Key_MN;
         when 499 => return Key_ME;
         when 500 => return Key_MS;
         when 504 => return Key_MA;
         when 508 => return Key_MZ;
         when 104 => return Key_MM;
         when 516 => return Key_NA;
         when 520 => return Key_NR;
         when 524 => return Key_NP;
         when 528 => return Key_NL;
         when 540 => return Key_NC;
         when 554 => return Key_NZ;
         when 558 => return Key_NI;
         when 562 => return Key_NE;
         when 566 => return Key_NG;
         when 570 => return Key_NU;
         when 574 => return Key_NF;
         when 807 => return Key_MK;
         when 580 => return Key_MP;
         when 578 => return Key_NO;
         when 512 => return Key_OM;
         when 586 => return Key_PK;
         when 585 => return Key_PW;
         when 275 => return Key_PS;
         when 591 => return Key_PA;
         when 598 => return Key_PG;
         when 600 => return Key_PY;
         when 604 => return Key_PE;
         when 608 => return Key_PH;
         when 612 => return Key_PN;
         when 616 => return Key_PL;
         when 620 => return Key_PT;
         when 630 => return Key_PR;
         when 634 => return Key_QA;
         when 642 => return Key_RO;
         when 643 => return Key_RU;
         when 646 => return Key_RW;
         when 638 => return Key_RE;
         when 652 => return Key_BL;
         when 654 => return Key_SH;
         when 659 => return Key_KN;
         when 662 => return Key_LC;
         when 663 => return Key_MF;
         when 666 => return Key_PM;
         when 670 => return Key_VC;
         when 882 => return Key_WS;
         when 674 => return Key_SM;
         when 678 => return Key_ST;
         when 682 => return Key_SA;
         when 686 => return Key_SN;
         when 688 => return Key_RS;
         when 690 => return Key_SC;
         when 694 => return Key_SL;
         when 702 => return Key_SG;
         when 534 => return Key_SX;
         when 703 => return Key_SK;
         when 705 => return Key_SI;
         when 090 => return Key_SB;
         when 706 => return Key_SO;
         when 710 => return Key_ZA;
         when 239 => return Key_GS;
         when 728 => return Key_SS;
         when 724 => return Key_ES;
         when 144 => return Key_LK;
         when 729 => return Key_SD;
         when 740 => return Key_SR;
         when 744 => return Key_SJ;
         when 752 => return Key_SE;
         when 756 => return Key_CH;
         when 760 => return Key_SY;
         when 158 => return Key_TW;
         when 762 => return Key_TJ;
         when 834 => return Key_TZ;
         when 764 => return Key_TH;
         when 626 => return Key_TL;
         when 768 => return Key_TG;
         when 772 => return Key_TK;
         when 776 => return Key_TO;
         when 780 => return Key_TT;
         when 788 => return Key_TN;
         when 795 => return Key_TM;
         when 796 => return Key_TC;
         when 798 => return Key_TV;
         when 792 => return Key_TR;
         when 800 => return Key_UG;
         when 804 => return Key_UA;
         when 784 => return Key_AE;
         when 826 => return Key_GB;
         when 581 => return Key_UM;
         when 840 => return Key_US;
         when 858 => return Key_UY;
         when 860 => return Key_UZ;
         when 548 => return Key_VU;
         when 862 => return Key_VE;
         when 704 => return Key_VN;
         when 092 => return Key_VG;
         when 850 => return Key_VI;
         when 876 => return Key_WF;
         when 732 => return Key_EH;
         when 887 => return Key_YE;
         when 894 => return Key_ZM;
         when 716 => return Key_ZW;
         when 248 => return Key_AX;
         when others => raise Country_Not_Found;
      end case;
   end Numeric_To_Alpha_2;

   --  Lookup table as function to match country table with key.
   function Alpha_2_Key_To_Country (Alpha_2 : Alpha_2_Key) return ISO_3166_1 is
   begin
      -- Alpha_2 lookup table.
      case Alpha_2 is
         when Key_AF => return Country_AF;
         when Key_AL => return Country_AL;
         when Key_DZ => return Country_DZ;
         when Key_AS => return Country_AS;
         when Key_AD => return Country_AD;
         when Key_AO => return Country_AO;
         when Key_AI => return Country_AI;
         when Key_AQ => return Country_AQ;
         when Key_AG => return Country_AG;
         when Key_AR => return Country_AR;
         when Key_AM => return Country_AM;
         when Key_AW => return Country_AW;
         when Key_AU => return Country_AU;
         when Key_AT => return Country_AT;
         when Key_AZ => return Country_AZ;
         when Key_BS => return Country_BS;
         when Key_BH => return Country_BH;
         when Key_BD => return Country_BD;
         when Key_BB => return Country_BB;
         when Key_BY => return Country_BY;
         when Key_BE => return Country_BE;
         when Key_BZ => return Country_BZ;
         when Key_BJ => return Country_BJ;
         when Key_BM => return Country_BM;
         when Key_BT => return Country_BT;
         when Key_BO => return Country_BO;
         when Key_BQ => return Country_BQ;
         when Key_BA => return Country_BA;
         when Key_BW => return Country_BW;
         when Key_BV => return Country_BV;
         when Key_BR => return Country_BR;
         when Key_IO => return Country_IO;
         when Key_BN => return Country_BN;
         when Key_BG => return Country_BG;
         when Key_BF => return Country_BF;
         when Key_BI => return Country_BI;
         when Key_CV => return Country_CV;
         when Key_KH => return Country_KH;
         when Key_CM => return Country_CM;
         when Key_CA => return Country_CA;
         when Key_KY => return Country_KY;
         when Key_CF => return Country_CF;
         when Key_TD => return Country_TD;
         when Key_CL => return Country_CL;
         when Key_CN => return Country_CN;
         when Key_CX => return Country_CX;
         when Key_CC => return Country_CC;
         when Key_CO => return Country_CO;
         when Key_KM => return Country_KM;
         when Key_CD => return Country_CD;
         when Key_CG => return Country_CG;
         when Key_CK => return Country_CK;
         when Key_CR => return Country_CR;
         when Key_HR => return Country_HR;
         when Key_CU => return Country_CU;
         when Key_CW => return Country_CW;
         when Key_CY => return Country_CY;
         when Key_CZ => return Country_CZ;
         when Key_CI => return Country_CI;
         when Key_DK => return Country_DK;
         when Key_DJ => return Country_DJ;
         when Key_DM => return Country_DM;
         when Key_DO => return Country_DO;
         when Key_EC => return Country_EC;
         when Key_EG => return Country_EG;
         when Key_SV => return Country_SV;
         when Key_GQ => return Country_GQ;
         when Key_ER => return Country_ER;
         when Key_EE => return Country_EE;
         when Key_SZ => return Country_SZ;
         when Key_ET => return Country_ET;
         when Key_FK => return Country_FK;
         when Key_FO => return Country_FO;
         when Key_FJ => return Country_FJ;
         when Key_FI => return Country_FI;
         when Key_FR => return Country_FR;
         when Key_GF => return Country_GF;
         when Key_PF => return Country_PF;
         when Key_TF => return Country_TF;
         when Key_GA => return Country_GA;
         when Key_GM => return Country_GM;
         when Key_GE => return Country_GE;
         when Key_DE => return Country_DE;
         when Key_GH => return Country_GH;
         when Key_GI => return Country_GI;
         when Key_GR => return Country_GR;
         when Key_GL => return Country_GL;
         when Key_GD => return Country_GD;
         when Key_GP => return Country_GP;
         when Key_GU => return Country_GU;
         when Key_GT => return Country_GT;
         when Key_GG => return Country_GG;
         when Key_GN => return Country_GN;
         when Key_GW => return Country_GW;
         when Key_GY => return Country_GY;
         when Key_HT => return Country_HT;
         when Key_HM => return Country_HM;
         when Key_VA => return Country_VA;
         when Key_HN => return Country_HN;
         when Key_HK => return Country_HK;
         when Key_HU => return Country_HU;
         when Key_IS => return Country_IS;
         when Key_IN => return Country_IN;
         when Key_ID => return Country_ID;
         when Key_IR => return Country_IR;
         when Key_IQ => return Country_IQ;
         when Key_IE => return Country_IE;
         when Key_IM => return Country_IM;
         when Key_IL => return Country_IL;
         when Key_IT => return Country_IT;
         when Key_JM => return Country_JM;
         when Key_JP => return Country_JP;
         when Key_JE => return Country_JE;
         when Key_JO => return Country_JO;
         when Key_KZ => return Country_KZ;
         when Key_KE => return Country_KE;
         when Key_KI => return Country_KI;
         when Key_KP => return Country_KP;
         when Key_KR => return Country_KR;
         when Key_KW => return Country_KW;
         when Key_KG => return Country_KG;
         when Key_LA => return Country_LA;
         when Key_LV => return Country_LV;
         when Key_LB => return Country_LB;
         when Key_LS => return Country_LS;
         when Key_LR => return Country_LR;
         when Key_LY => return Country_LY;
         when Key_LI => return Country_LI;
         when Key_LT => return Country_LT;
         when Key_LU => return Country_LU;
         when Key_MO => return Country_MO;
         when Key_MG => return Country_MG;
         when Key_MW => return Country_MW;
         when Key_MY => return Country_MY;
         when Key_MV => return Country_MV;
         when Key_ML => return Country_ML;
         when Key_MT => return Country_MT;
         when Key_MH => return Country_MH;
         when Key_MQ => return Country_MQ;
         when Key_MR => return Country_MR;
         when Key_MU => return Country_MU;
         when Key_YT => return Country_YT;
         when Key_MX => return Country_MX;
         when Key_FM => return Country_FM;
         when Key_MD => return Country_MD;
         when Key_MC => return Country_MC;
         when Key_MN => return Country_MN;
         when Key_ME => return Country_ME;
         when Key_MS => return Country_MS;
         when Key_MA => return Country_MA;
         when Key_MZ => return Country_MZ;
         when Key_MM => return Country_MM;
         when Key_NA => return Country_NA;
         when Key_NR => return Country_NR;
         when Key_NP => return Country_NP;
         when Key_NL => return Country_NL;
         when Key_NC => return Country_NC;
         when Key_NZ => return Country_NZ;
         when Key_NI => return Country_NI;
         when Key_NE => return Country_NE;
         when Key_NG => return Country_NG;
         when Key_NU => return Country_NU;
         when Key_NF => return Country_NF;
         when Key_MK => return Country_MK;
         when Key_MP => return Country_MP;
         when Key_NO => return Country_NO;
         when Key_OM => return Country_OM;
         when Key_PK => return Country_PK;
         when Key_PW => return Country_PW;
         when Key_PS => return Country_PS;
         when Key_PA => return Country_PA;
         when Key_PG => return Country_PG;
         when Key_PY => return Country_PY;
         when Key_PE => return Country_PE;
         when Key_PH => return Country_PH;
         when Key_PN => return Country_PN;
         when Key_PL => return Country_PL;
         when Key_PT => return Country_PT;
         when Key_PR => return Country_PR;
         when Key_QA => return Country_QA;
         when Key_RO => return Country_RO;
         when Key_RU => return Country_RU;
         when Key_RW => return Country_RW;
         when Key_RE => return Country_RE;
         when Key_BL => return Country_BL;
         when Key_SH => return Country_SH;
         when Key_KN => return Country_KN;
         when Key_LC => return Country_LC;
         when Key_MF => return Country_MF;
         when Key_PM => return Country_PM;
         when Key_VC => return Country_VC;
         when Key_WS => return Country_WS;
         when Key_SM => return Country_SM;
         when Key_ST => return Country_ST;
         when Key_SA => return Country_SA;
         when Key_SN => return Country_SN;
         when Key_RS => return Country_RS;
         when Key_SC => return Country_SC;
         when Key_SL => return Country_SL;
         when Key_SG => return Country_SG;
         when Key_SX => return Country_SX;
         when Key_SK => return Country_SK;
         when Key_SI => return Country_SI;
         when Key_SB => return Country_SB;
         when Key_SO => return Country_SO;
         when Key_ZA => return Country_ZA;
         when Key_GS => return Country_GS;
         when Key_SS => return Country_SS;
         when Key_ES => return Country_ES;
         when Key_LK => return Country_LK;
         when Key_SD => return Country_SD;
         when Key_SR => return Country_SR;
         when Key_SJ => return Country_SJ;
         when Key_SE => return Country_SE;
         when Key_CH => return Country_CH;
         when Key_SY => return Country_SY;
         when Key_TW => return Country_TW;
         when Key_TJ => return Country_TJ;
         when Key_TZ => return Country_TZ;
         when Key_TH => return Country_TH;
         when Key_TL => return Country_TL;
         when Key_TG => return Country_TG;
         when Key_TK => return Country_TK;
         when Key_TO => return Country_TO;
         when Key_TT => return Country_TT;
         when Key_TN => return Country_TN;
         when Key_TM => return Country_TM;
         when Key_TC => return Country_TC;
         when Key_TV => return Country_TV;
         when Key_TR => return Country_TR;
         when Key_UG => return Country_UG;
         when Key_UA => return Country_UA;
         when Key_AE => return Country_AE;
         when Key_GB => return Country_GB;
         when Key_UM => return Country_UM;
         when Key_US => return Country_US;
         when Key_UY => return Country_UY;
         when Key_UZ => return Country_UZ;
         when Key_VU => return Country_VU;
         when Key_VE => return Country_VE;
         when Key_VN => return Country_VN;
         when Key_VG => return Country_VG;
         when Key_VI => return Country_VI;
         when Key_WF => return Country_WF;
         when Key_EH => return Country_EH;
         when Key_YE => return Country_YE;
         when Key_ZM => return Country_ZM;
         when Key_ZW => return Country_ZW;
         when Key_AX => return Country_AX;
         when others => raise Country_Not_Found;
      end case;
   end Alpha_2_Key_To_Country;

   --  *** End Lookup table functions ***

end ISO_3166;
